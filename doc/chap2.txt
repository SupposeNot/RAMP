  
  [1X2 [33X[0;0YBasics[133X[101X
  
  
  [1X2.1 [33X[0;0YConstructors[133X[101X
  
  
  [1X2.1-1 [33X[0;0YReflexibleManiplex[133X[101X
  
  [33X[1;0Y[29X[2XReflexibleManiplex[102X( [3Xg[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XReflexibleManiplex[102X( [3Xsym[103X[, [3Xrelations[103X] ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Y[10XIsReflexibleManiplex[110X[133X
  
  [33X[0;0YIn  the  first  form,  we  are  given an Sggi [3Xg[103X and we return the reflexible
  maniplex  with  that automorphism group, where the privileged generators are
  those returned by GeneratorsOfGroup(g).[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xg := Group([(1,2), (2,3), (3,4)]);[127X[104X
    [4X[25Xgap>[125X [27XM := ReflexibleManiplex(g);[127X[104X
    [4X[25Xgap>[125X [27XM = Simplex(3);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThis function first checks whether g is an Sggi. Use [10XReflexibleManiplexNC[110X to
  bypass that check. The second form returns the universal reflexible maniplex
  with  Schlafli symbol [3Xsym[103X. If the optional argument [3Xrelations[103X is given, then
  we  return  the  reflexible  maniplex with the given defining relations. The
  relations  can be given by a list of Tietze words or as a string of relators
  or relations that involve r0 etc.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xq := ReflexibleManiplex([4,3,4], "(r0 r1 r2)^3, (r1 r2 r3)^3");;[127X[104X
    [4X[25Xgap>[125X [27Xq = ReflexibleManiplex([4,3,4], "(r0 r1 r2)^3 = (r1 r2 r3)^3 = 1");[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27Xp := ReflexibleManiplex([infinity], "r0 r1 r0 = r1 r0 r1");;[127X[104X
  [4X[32X[104X
  
  [33X[0;0YIf  the  option  set_schlafli is set, then we set the Schlafli symbol to the
  one  given. This may not be the correct Schlafli symbol, since the relations
  may  cause  a  collapse,  so  this  should only be used if you know that the
  Schlafli symbol is correct.[133X
  
  [1X2.1-2 Maniplex[101X
  
  [33X[1;0Y[29X[2XManiplex[102X( [3XG[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Y[10XIsManiplex[110X[133X
  
  [33X[0;0YGiven  a  permutation  group  [3XG[103X on the set [1..N], returns a maniplex with N
  flags  with connection group [3XG[103X. The output may not make sense if [3XG[103X is not an
  sggi.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XG := Group([(1,2)(3,4)(5,6), (2,3)(4,5)(1,6)]);;[127X[104X
    [4X[25Xgap>[125X [27XM := Maniplex(G);[127X[104X
    [4X[28XPgon(3)[128X[104X
    [4X[25Xgap>[125X [27Xc := ConnectionGroup(Cube(3));[127X[104X
    [4X[28X<permutation group with 3 generators>[128X[104X
    [4X[25Xgap>[125X [27XManiplex(c) = Cube(3);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [1X2.1-3 Maniplex[101X
  
  [33X[1;0Y[29X[2XManiplex[102X( [3XM[103X, [3XH[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Y[10XIsManiplex[110X[133X
  
  [33X[0;0YLet   [3XM[103X   be   a   reflexible   maniplex   and   let  [3XH[103X  be  a  subgroup  of
  AutomorphismGroup([3XM[103X). This returns the maniplex [3XM/H[103X. This will be reflexible
  if  and only if [3XH[103X is normal. For most purposes, it is probably easier to use
  QuotientManiplex,  which  takes  a string of relations as input instead of a
  subgroup. The example below builds the map [23X\{4, 4\}_{(1,0), (0,2)}[123X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XM := ReflexibleManiplex([4,4]);[127X[104X
    [4X[28XCubicTiling(2)[128X[104X
    [4X[25Xgap>[125X [27XG := AutomorphismGroup(M);[127X[104X
    [4X[28X<fp group of size infinity on the generators [ r0, r1, r2 ]>[128X[104X
    [4X[25Xgap>[125X [27XH := Subgroup(G, [G.1*G.2*G.3*G.2, (G.2*G.1*G.2*G.3)^2]);[127X[104X
    [4X[28XGroup([ r0*r1*r2*r1, (r1*r0*r1*r2)^2 ])[128X[104X
    [4X[25Xgap>[125X [27XM2 := Maniplex(M, H);[127X[104X
    [4X[28X3-maniplex[128X[104X
    [4X[25Xgap>[125X [27XSize(M2);[127X[104X
    [4X[28X16[128X[104X
  [4X[32X[104X
  
  [1X2.1-4 Maniplex[101X
  
  [33X[1;0Y[29X[2XManiplex[102X( [3XF[103X, [3Xinputs[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Y[10XIsManiplex[110X[133X
  
  [33X[0;0YConstructs  a  formal  maniplex, represented by an operation [3XF[103X and a list of
  arguments  [3Xinputs[103X.  By  itself,  this  does  not  really _do_ anything -- it
  creates  a  maniplex  object that only knows the operation [3XF[103X and the [3Xinputs[103X.
  However,  many  polytope operations (such as Pyramid(M), Medial(M), etc) use
  this  construction  as  a base, and then add "attribute computers" that tell
  the  formal maniplex how to compute certain things in terms of properties of
  the base. See AddAttrComputer for more information.[133X
  
  [1X2.1-5 Maniplex[101X
  
  [33X[1;0Y[29X[2XManiplex[102X( [3XP[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Y[10XIsManiplex[110X[133X
  
  [33X[0;0YConstructs the maniplex from the given poset [3XP[103X. This assumes that P actually
  defines a maniplex.[133X
  
  [1X2.1-6 IsPolytopal[101X
  
  [33X[1;0Y[29X[2XIsPolytopal[102X( [3XM[103X ) [32X property[133X
  [6XReturns:[106X  [33X[0;10Y[10Xtrue[110X or [10Xfalse[110X[133X
  
  [33X[0;0YReturns  whether  the  maniplex  [3XM[103X  is  polytopal; i.e., the flag graph of a
  polytope.[133X
  
  
  [1X2.2 [33X[0;0YSggis[133X[101X
  
  
  [1X2.2-1 [33X[0;0YUniversalSggi[133X[101X
  
  [33X[1;0Y[29X[2XUniversalSggi[102X( [3Xn[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XUniversalSggi[102X( [3Xsym[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Y[10XIsFpGroup[110X[133X
  
  [33X[0;0YIn  the  first  form,  returns the universal Coxeter Group of rank n. In the
  second form, returns the Coxeter Group with Schlafli symbol sym.[133X
  
  [1X2.2-2 Sggi[101X
  
  [33X[1;0Y[29X[2XSggi[102X( [3Xsymbol[103X[, [3Xrelations[103X] ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Y[10XIsFpGroup[110X[133X
  
  [33X[0;0YReturns  the  sggi  defined  by the given Schlafli symbol and with the given
  relations.  The  relations  can  be  given by a list of Tietze words or as a
  string  of  relators  or  relations that involve r0 etc. If no relations are
  given, then returns the universal sggi with the given Schlafli symbol.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xg := Sggi([4,3,4], "(r0 r1 r2)^3, (r1 r2 r3)^3");;[127X[104X
    [4X[25Xgap>[125X [27Xh := Sggi([4,4], "r0 = r2");;[127X[104X
    [4X[25Xgap>[125X [27Xk := Sggi([infinity, infinity], [[1,2,1,2,1,2], [2,3,2,3,2,3]]);;[127X[104X
    [4X[25Xgap>[125X [27Xk = Sggi([3,3]);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [1X2.2-3 IsGgi[101X
  
  [33X[1;0Y[29X[2XIsGgi[102X( [3Xg[103X ) [32X property[133X
  [6XReturns:[106X  [33X[0;10Ywhether  [3Xg[103X  is  generated  by  involutions.  Or more specifically,
            whether GeneratorsOfGroup([3Xg[103X) all have order 2 or less.[133X
  
  [1X2.2-4 IsStringy[101X
  
  [33X[1;0Y[29X[2XIsStringy[102X( [3Xg[103X ) [32X property[133X
  [6XReturns:[106X  [33X[0;10Ywhether every pair of non-adjacent generators of [3Xg[103X commute.[133X
  
  [1X2.2-5 IsSggi[101X
  
  [33X[1;0Y[29X[2XIsSggi[102X( [3Xg[103X ) [32X property[133X
  [6XReturns:[106X  [33X[0;10Ywhether  [3Xg[103X  is a string group generated by involutions. Equivalent
            to [10XIsGgi(g) and IsStringy(g)[110X.[133X
  
  [1X2.2-6 IsStringC[101X
  
  [33X[1;0Y[29X[2XIsStringC[102X( [3XG[103X ) [32X operation[133X
  
  [33X[0;0YFor an sggi [3XG[103X, returns whether the group is a string C group.[133X
  
  [1X2.2-7 IsStringCPlus[101X
  
  [33X[1;0Y[29X[2XIsStringCPlus[102X( [3XG[103X ) [32X operation[133X
  
  [33X[0;0YFor  a  "string  rotation group" [3XG[103X, returns whether the group is a string C+
  group. It does not check whether [3XG[103X is a string rotation group.[133X
  
  [1X2.2-8 SggiElement[101X
  
  [33X[1;0Y[29X[2XSggiElement[102X( [3Xg[103X, [3Xstr[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ythe element of [3Xg[103X with underlying word [3Xstr[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xg := Group((1,2),(2,3),(3,4));;[127X[104X
    [4X[25Xgap>[125X [27XSggiElement(g, "r0 r1");[127X[104X
    [4X[28X(1,3,2)[128X[104X
  [4X[32X[104X
  
  [1X2.2-9 SggiFamily[101X
  
  [33X[1;0Y[29X[2XSggiFamily[102X( [3Xparent[103X, [3Xwords[103X ) [32X operation[133X
  
  [33X[0;0YGiven  a  [3Xparent[103X group and a list of strings that represent words in r0, r1,
  etc,  returns  a function. That function accepts a list of positive integers
  L, and returns the quotient of [3Xparent[103X by the relations that set the order of
  each [3Xwords[i][103X to L[i].[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xf := SggiFamily(Sggi([4,4]), ["r0 r1 r2 r1"]);[127X[104X
    [4X[28Xfunction( orders ) ... end[128X[104X
    [4X[25Xgap>[125X [27Xg := f([3]);[127X[104X
    [4X[28X<fp group on the generators [ r0, r1, r2 ]>[128X[104X
    [4X[25Xgap>[125X [27XSize(g);[127X[104X
    [4X[28X72[128X[104X
    [4X[25Xgap>[125X [27Xh := f([6]);[127X[104X
    [4X[28X<fp group on the generators [ r0, r1, r2 ]>[128X[104X
    [4X[25Xgap>[125X [27XIsQuotient(h,g);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [33X[0;0YOne  of the advantages of building an SggiFamily is that testing whether one
  member  of  the  family  is  a  quotient of another member can be done quite
  quickly.[133X
  
