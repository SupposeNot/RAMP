<?xml version="1.0" encoding="UTF-8"?>

<!-- This is an automatically generated file. -->
<Chapter Label="Chapter_Products_of_Posets_and_Digraphs">
<Heading>Products of Posets and Digraphs</Heading>

 This uses the work of Gleason and Hubard.
<Section Label="Chapter_Products_of_Posets_and_Digraphs_Section_Construction_methods">
<Heading>Construction methods</Heading>

 Anyone know how to link stuff?
<ManSection>
  <Oper Arg="poset1, poset2" Name="JoinProduct" Label="for IsPoset,IsPoset"/>
 <Returns>poset
</Returns>
 <Description>
Given two posets, this forms the join product.
 If given two partial orders, returns the join product of the partial orders.
 </Description>
</ManSection>


<Example><![CDATA[
gap> p:=PosetFromManiplex(Cube(2));
A poset
gap> rel:=BinaryRelationOnPoints([[1,2],[2]]);
Binary Relation on 2 points
gap> p1:=PosetFromPartialOrder(rel);
A poset using the IsPosetOfIndices representation
gap> j:=JoinProduct(p,p1);
A poset using the IsPosetOfIndices representation
gap> IsIsomorphicPoset(j,PosetFromManiplex(PyramidOver(Cube(2))));
true
]]></Example>


<ManSection>
  <Oper Arg="polytope1, polytope2" Name="CartesianProduct" Label="for IsPoset,IsPoset"/>
 <Returns>polytope
</Returns>
 <Description>
Given two polytopes, forms the cartesian product of the polytopes. Should also work if you give it any two posets.
 </Description>
</ManSection>


<Example><![CDATA[
gap> p1:=PosetFromManiplex(Edge());
A poset
gap> p2:=PosetFromManiplex(Simplex(2));
A poset
gap> c:=CartesianProduct(p1,p2);
A poset using the IsPosetOfIndices representation
gap> IsIsomorphicPoset(c,PosetFromManiplex(PrismOver(Simplex(2))));
true
]]></Example>


<ManSection>
  <Oper Arg="polytope1, polytope2" Name="DirectSumOfPosets" Label="for IsPoset,IsPoset"/>
 <Returns>polytope
</Returns>
 <Description>
Given two polytopes, forms the direct sum of the polytopes.
 </Description>
</ManSection>


<Example><![CDATA[
gap> p1:=PosetFromManiplex(Cube(2));;p2:=PosetFromManiplex(Edge());;
gap> ds:=DirectSumOfPosets(p1,p2);
A poset using the IsPosetOfIndices representation.
gap> IsIsomorphicPoset(ds,PosetFromManiplex(CrossPolytope(3)));
true
]]></Example>


<ManSection>
  <Oper Arg="polytope1, polytope2" Name="TopologicalProduct" Label="for IsPoset,IsPoset"/>
 <Returns>polytope
</Returns>
 <Description>
Given two polytopes, forms the topological product of the polytopes.
 </Description>
</ManSection>


 Here we demonstrate that the topological product (as expected) when taking the product of a triangle with itself gives us the torus <Math>\{4,4\}_{(3,0)}</Math> with 72 flags.
<Example><![CDATA[
gap> p:=PosetFromManiplex(Pgon(3));
A poset using the IsPosetOfFlags representation.
gap> tp:=TopologicalProduct(p,p);
A poset using the IsPosetOfIndices representation.
gap> s0 := (5,6);;
gap> s1 := (1,2)(3,5)(4,6);;
gap> s2 := (2,3);;
gap> poly := Group([s0,s1,s2]);;
gap> torus:=PosetFromManiplex(ReflexibleManiplex(poly));
A poset using the IsPosetOfFlags representation.
gap> IsIsomorphicPoset(p,tp);
false
gap> IsIsomorphicPoset(torus,tp);
true
]]></Example>


<ManSection>
  <Oper Arg="polytope" Name="Antiprism" Label="for IsPoset"/>
 <Returns>poset
</Returns>
 <Description>
Given a <A>polytope</A> (actually, should work for any poset), will return the antiprism of the <A>polytope</A> (poset).
 </Description>
</ManSection>


<Example><![CDATA[
gap> p:=PosetFromManiplex(Pgon(3));;
gap> a:=Antiprism(p);;
gap> IsIsomorphicPoset(a,PosetFromManiplex(CrossPolytope(3)));
true
gap> p:=PosetFromManiplex(Pgon(4));;a:=Antiprism(p);;
gap> d:=DualPoset(p);;ad:=Antiprism(d);;
gap> IsIsomorphicPoset(a,ad);
true
]]></Example>


</Section>


</Chapter>

