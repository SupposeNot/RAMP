<?xml version="1.0" encoding="UTF-8"?>

<!-- This is an automatically generated file. -->
<Chapter Label="Chapter_Comparing_maniplexes">
<Heading>Comparing maniplexes</Heading>

<Section Label="Chapter_Comparing_maniplexes_Section_Quotients_and_covers">
<Heading>Quotients and covers</Heading>

 Many of the quotient operations let you describe some relations in terms of a string.
 We assume that Sggis have a generating set of <Math>\{r0, r1, ..., r_{n-1}\}</Math>, so
 these relation strings will look something like "(r0 r1 r2)^5, r2 = (r0 r1)^3".
 Notice that we can mix relations like "r2 = (r0 r1)^3" with relators like "(r0 r1 r2)^5";
 the latter is treated as the relation "(r0 r1 r2)^5 = 1".
 For convenience, we also allow relations to contain the following strings:
 s1, s2, s3, etc, where si is expanded to r(i-1) ri. For example, s2 becomes r1 r2.
 z1, z2, z3, etc, where zi is expanded to r0 (r1 r2)^i (the "i-zigzag" word).
 h1, h2, h3, etc, where hi is expanded to r0 (r1 r2)^(j-1) r1 (the "i-hole" word).
 We note that these strings are all restricted to have <Math>i \leq 9</Math>, <Emph>including ri</Emph>.
 This restriction might be changed eventually, but it will require a rewrite of the
 method ParseStringCRels that underlies many quotient operations.
<ManSection>
  <Oper Arg="M1, M2" Name="IsQuotient" Label="for IsManiplex, IsManiplex"/>
 <Description>
 Returns whether <A>M2</A> is a quotient of <A>M1</A>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="g, h" Name="IsQuotient" Label="for IsSggi, IsSggi"/>
 <Description>
 Returns whether <A>h</A> is a quotient of <A>g</A>.
 That is, whether there is a homomorphism sending each generator of g
 to the corresponding generator of h.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="M1, M2" Name="IsCover" Label="for IsManiplex, IsManiplex"/>
 <Description>
 Returns whether <A>M2</A> is a cover of <A>M1</A>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="M1, M2" Name="IsIsomorphicManiplex" Label="for IsManiplex, IsManiplex"/>
 <Description>
 Returns whether <A>M1</A> is isomorphic to <A>M2</A>.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="M" Name="SmallestReflexibleCover" Label="for IsManiplex"/>
 <Description>
 Returns the smallest regular cover of <A>M</A>, which is the
 maniplex whose automorphism group is isomorphic to the connection group
 of <A>M</A>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="M, relStr" Name="QuotientManiplex" Label="for IsReflexibleManiplex, IsString"/>
 <Description>
 Given a reflexible maniplex <A>M</A>, generates the subgroup S of
 AutomorphismGroup(<A>M</A>) given by relStr, and returns the quotient
 maniplex M / S.
 For example, QuotientManiplex(CubicTiling(2), "(r0 r1 r2 r1)^5, (r1 r0 r1 r2)^2")
 returns the toroidal map {4,4}_{(5,0),(0,2)}.
 You can also input this as CubicTiling(2) / "(r0 r1 r2 r1)^5, (r1 r0 r1 r2)^2".
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="M, rels" Name="ReflexibleQuotientManiplex" Label="for IsManiplex, IsList"/>
 <Description>
 Given a reflexible maniplex <A>M</A>, generates the normal closure N of
 the subgroup S of AutomorphismGroup(<A>M</A>) given by relStr, and returns 
 the quotient maniplex M / N, which will be reflexible.
 For example, QuotientManiplex(CubicTiling(2), "(r0 r1 r2 r1)^5, (r1 r0 r1 r2)^2")
 returns the toroidal map {4,4}_{(1,0)}, because the normal closure of the group
 generated by (r0 r1 r2 r1)^5 and (r1 r0 r1 r2)^2 is the group generated by r0 r1 r2 r1
 and r1 r0 r1 r2.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="g, rels" Name="QuotientSggi" Label="for IsGroup, IsList"/>
 <Returns>the quotient of <A>g</A> by <A>rels</A>, which is either a list  of Tietze words or a string of relations that is parsed by ParseStringCRels.
</Returns>
 <Description>
<Example><![CDATA[
gap> g := UniversalSggi(3);
<fp group of size infinity on the generators [ r0, r1, r2 ]>
gap> h := QuotientSggi(g, "(r0 r1)^5, (r1 r2)^3, (r0 r1 r2)^5");
<fp group on the generators [ r0, r1, r2 ]>
gap> Size(h);
60
]]></Example>


 </Description>
</ManSection>


<ManSection>
  <Oper Arg="g, n" Name="QuotientSggiByNormalSubgroup" Label="for IsGroup,IsGroup"/>
 <Returns>g/n
</Returns>
 <Description>
Given an sggi <A>g</A> and a normal subgroup <A>n</A> in <A>g</A>, this function will give you the quotient in a way that respects the generators (i.e., the generators of the quotient will be the images of the generators of the original group).
 </Description>
</ManSection>


<Example><![CDATA[
gap> g:=AutomorphismGroup(Cube(3));
<fp group of size 48 on the generators [ r0, r1, r2 ]>
gap> q:=QuotientSggiByNormalSubgroup(g,Group([(g.1*g.2*g.3)^3]));
Group([ (1,2)(3,7)(4,6)(5,10)(8,14)(9,16)(11,18)(12,20)(13,17)(15,23)(19,22)(21,24), (1,3)(2,5)(4,9)(6,12)(7,13)(8,15)(10,17)(11,19)(14,22)(16,24)(18,23)(20,21), (1,4)(2,6)(3,8)(5,11)(7,14)(9,15)(10,18)(12,19)(13,21)(16,23)(17,24)(20,22) ])
gap> Maniplex(q)=HemiCube(3);
true
]]></Example>


<ManSection>
  <Oper Arg="m, h" Name="QuotientManiplexByAutomorphismSubgroup" Label="for IsManiplex,IsPermGroup"/>
 <Returns>m/h
</Returns>
 <Description>
Given a maniplex <A>m</A>, and a subgroup <A>h</A> of the automorphism group on the flags, this function will give you the maniplex in which the orbits of flags under the action of <A>h</A> are identified.
 Note that this function doesn't do any prechecks, and may break easily when <Code>m/h</Code> _isn't_ a maniplex or when <Code>m/h</Code> is of lower rank (sorry!).
 </Description>
</ManSection>


<Example><![CDATA[
gap> m:=Cube(3);
Cube(3)
gap> a:=AutomorphismGroupOnFlags(m);
<permutation group with 3 generators>
gap> h:=Group((a.3*a.1*a.2)^3);
Group([ (1,7)(2,3)(4,18)(5,19)(6,20)(8,11)(9,12)(10,13)(14,32)(15,33)(16,34)(17,35)(21,25)(22,26)  (23,27)(24,28)(29,43)(30,44)(31,45)(36,39)(37,40)(38,41)(42,48)(46,47) ])
gap> q:=QuotientManiplexByAutomorphismSubgroup(m,h);
3-maniplex with 24 flags
gap> last=HemiCube(3);
true
]]></Example>


</Section>


</Chapter>

